MORPHEUS_CONFIGURE_FILE(Morpheus_config.h)

MORPHEUS_INCLUDE_DIRECTORIES(
  ${CMAKE_CURRENT_BINARY_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${MORPHEUS_TOP_BUILD_DIR}
)

INSTALL (DIRECTORY
  "${CMAKE_CURRENT_SOURCE_DIR}/"
  DESTINATION ${MORPHEUS_HEADER_DIR}
  FILES_MATCHING
  PATTERN "*.hpp"
  PATTERN "*.h"
)

#I don't want the complexity of sometimes interface/sometimes not
#Just minimally force an empty dummy file
SET(MORPHEUS_CORE_SRCS dummy.cpp)
APPEND_GLOB(MORPHEUS_CORE_SRCS ${CMAKE_CURRENT_SOURCE_DIR}/impl/*.cpp)
APPEND_GLOB(MORPHEUS_CORE_SRCS ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
SET(MORPHEUS_CORE_HEADERS)
APPEND_GLOB(MORPHEUS_CORE_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/*.hpp)
APPEND_GLOB(MORPHEUS_CORE_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/impl/*.hpp)
APPEND_GLOB(MORPHEUS_CORE_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/fwd/*.hpp)

IF (KOKKOS_ENABLE_CUDA)
  APPEND_GLOB(MORPHEUS_CORE_SRCS ${CMAKE_CURRENT_SOURCE_DIR}/impl/Cuda/*.cpp)
  APPEND_GLOB(MORPHEUS_CORE_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/impl/Cuda/*.hpp)
ENDIF()

IF (KOKKOS_ENABLE_OPENMP)
  APPEND_GLOB(MORPHEUS_CORE_SRCS ${CMAKE_CURRENT_SOURCE_DIR}/impl/OpenMP/*.cpp)
  APPEND_GLOB(MORPHEUS_CORE_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/impl/OpenMP/*.hpp)
ENDIF()

IF (KOKKOS_ENABLE_SERIAL)
  APPEND_GLOB(MORPHEUS_CORE_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/impl/Serial/*.hpp)
ENDIF()

APPEND_GLOB(MORPHEUS_CORE_HEADERS ${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_NAME}_config.h)

MORPHEUS_ADD_LIBRARY(
  morpheuscore
  SOURCES ${MORPHEUS_CORE_SRCS}
  HEADERS ${MORPHEUS_CORE_HEADERS}
  ADD_BUILD_OPTIONS # core should be given all the necessary compiler/linker flags
)

MORPHEUS_LIB_INCLUDE_DIRECTORIES(morpheuscore
  ${MORPHEUS_TOP_BUILD_DIR}
  ${CMAKE_CURRENT_BINARY_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR}
)
# Link with Kokkos
TARGET_LINK_LIBRARIES(morpheuscore PUBLIC Kokkos::kokkos)
FOREACH(DIR ${MORPHEUS_CORE_HEADERS})
  TARGET_INCLUDE_DIRECTORIES(morpheuscore PUBLIC $<BUILD_INTERFACE:${DIR}>)
ENDFOREACH()
TARGET_INCLUDE_DIRECTORIES(morpheuscore PUBLIC
  $<INSTALL_INTERFACE:${MORPHEUS_HEADER_DIR}>)