
#if !defined(MORPHEUS_MACROS_HPP) || defined(MORPHEUS_CORE_CONFIG_H)
#error \
    "Do not include MorpheusCore_config.hpp directly; include Moprheus_Macros.hpp instead."
#else
#define MORPHEUS_CORE_CONFIG_HPP
#endif

// MORPHEUS_VERSION % 100 is the patch level
// MORPHEUS_VERSION / 100 % 100 is the minor version
// MORPHEUS_VERSION / 10000 is the major version
#cmakedefine MORPHEUS_VERSION @MORPHEUS_VERSION@
#cmakedefine Morpheus_VERSION_MAJOR  @Morpheus_VERSION_MAJOR@
#cmakedefine Morpheus_VERSION_MINOR  @Morpheus_VERSION_MINOR@
#cmakedefine Morpheus_VERSION_PATCH  @Morpheus_VERSION_PATCH@

#ifndef Morpheus_VERSION_MAJOR
#define Morpheus_VERSION_MAJOR 0
#endif

/* Execution Spaces */
#cmakedefine MORPHEUS_ENABLE_SERIAL     // Kokkos::Serial execution and memory spaces
#cmakedefine MORPHEUS_ENABLE_OPENMP     // Kokkos::OpenMP execution and memory spaces
#cmakedefine MORPHEUS_ENABLE_CUDA       // Kokkos::Cuda execution and memory spaces
#cmakedefine MORPHEUS_ENABLE_HIP        // Kokkos::HIP execution and memory spaces

/* Define if building in debug mode */
#cmakedefine HAVE_MORPHEUS_DEBUG

/* Define this macro if the MKL TPL is enabled.  This is different
   than just linking against the MKL to get the BLAS and LAPACK; it
   requires (a) header file(s) as well, and may use functions other
   than just BLAS and LAPACK functions.  */
#cmakedefine HAVE_MORPHEUS_MKL
/*
 * Third Party Libraries
 */
#cmakedefine MORPHEUS_ENABLE_TPL_BLAS      /* BLAS library */
#cmakedefine MORPHEUS_ENABLE_TPL_MKL       /* MKL library */
#cmakedefine MORPHEUS_ENABLE_TPL_CUSPARSE  /* CUSPARSE */
#cmakedefine MORPHEUS_ENABLE_TPL_CUBLAS    /* CUBLAS */
#cmakedefine MORPHEUS_ENABLE_TPL_CBLAS     /* CBLAS */
#cmakedefine MORPHEUS_ENABLE_TPL_METIS     /* METIS */
#cmakedefine MORPHEUS_ENABLE_TPL_ARMPL     /* ARMPL */

/* if MKL or ARMPL, BLAS is also defined */
#if defined(MORPHEUS_ENABLE_TPL_MKL) ||\
    defined(MORPHEUS_ENABLE_TPL_ARMPL)
#if !defined(MORPHEUS_ENABLE_TPL_BLAS)
#define MORPHEUS_ENABLE_TPL_BLAS
#endif
#endif